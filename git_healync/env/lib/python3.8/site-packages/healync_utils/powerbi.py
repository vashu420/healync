import requests

def get_embed_token(accessToken = None, groupId = None, reportId = None, settings = None): 
    if (accessToken == None or groupId == None or reportId== None or settings == None) : 
        return("Invalid Inputs") 
    else:  
        dest_url = 'https://api.powerbi.com/v1.0/myorg/groups/' + groupId \
                + '/reports/' + reportId + '/generatetoken'
        
        headers = {
            'Authorization': 'Bearer ' + accessToken ,
            'Content-Type': 'application/json'
            }
        response = requests.post(dest_url, json=settings, headers=headers)
        token = response.json().get('token')
        expiry = response.json().get('expiration')
        return {'token': token, 'expiration': expiry}

def get_access_token(clientId = None, clientSecret= None, refreshToken = None, username = None, password = None):
    if (clientId==None or clientSecret == None):
        return ("Invalid Inputs")
    else:
        if(refreshToken== None):
            if (username == None or password == None):
                return("Invalid Inputs")
            else:
                data = {
                    'grant_type': 'password',
                    'scope': 'openid',
                    'resource': r'https://analysis.windows.net/powerbi/api',
                    'client_id': clientId,
                    'client_secret' : clientSecret,
                    'username': username,
                    'password': password
                }
                response = requests.post('https://login.microsoftonline.com/common/oauth2/token', data=data)
                return response
        else:
            data = {
                'grant_type': 'refresh_token',
                'scope': 'openid',
                'resource': r'https://analysis.windows.net/powerbi/api',
                'client_id': clientId,
                'client_secret' : clientSecret,
                'refresh_token' : refreshToken
            }
            response = requests.post('https://login.microsoftonline.com/common/oauth2/token', data=data)
        return response


